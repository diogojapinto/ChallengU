{
  "name": "kindof",
  "version": "1.0.0",
  "description": "A proper and semantic typeof function that works with literal primitives, boxed objects and those from another execution context.",
  "keywords": [
    "tostring",
    "type",
    "typeof"
  ],
  "homepage": "https://github.com/moll/js-kindof",
  "bugs": {
    "url": "https://github.com/moll/js-kindof/issues"
  },
  "author": {
    "name": "Andri Möll",
    "email": "andri@dot.ee",
    "url": "http://themoll.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/moll/js-kindof.git"
  },
  "licenses": [
    {
      "type": "LAGPL",
      "url": "https://github.com/moll/js-kindof/blob/master/LICENSE"
    }
  ],
  "main": "kindof.js",
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "mocha": ">= 1.12.0 < 2"
  },
  "readme": "Kindof.js\n=====================\n[![NPM version](https://badge.fury.io/js/kindof.png)](http://badge.fury.io/js/kindof)\n[![Build status](https://travis-ci.org/moll/js-kindof.png?branch=master)](https://travis-ci.org/moll/js-kindof)\n\nKindof.js **provides a single `kindof` function** that does what you'd expect from `typeof` — gives you the proper semantic type regardless if the variable was a primitive literal (`\"Hello\"`), a boxed object (`new String(\"Hello\")`) or came from another execution context (e.g. an array from another `<iframe>`).\n\n## Tour\nWhen and why should you use `kindof` over `typeof`?\n\n- When you need a type check that returns `\"null\"` given the `null` value.  \n  You might remember, JavaScript's `typeof` says `null` is an object.\n- When you want to **handle both literal primitives** `42` and **objects** `new Number(42)` (for robustness) the same way.  \n  A single `kindof(num) == \"number\"` check makes that easy.  \n  Be sure to compare with `==` to allow for coercion in that case.\n- When there's a chance you might get an object from **another execution context**.  \n  In the browser that might mean an object from another `<frame>`.  \n  Different execution contexts have different built-in class instances, so you can't do `obj instanceof Date` safely.\n\nKindof.js supports all ECMAScript **built-in types and classes**: `undefined`, `null`, `Boolean`, `Number`, `String`, `RegExp`, `Date`, `Array`, `Function` and plain old `Object`. Others, e.g. `Math` and `JSON`, are considered just objects. In general, objects that behave like **value objects** (numbers, dates etc.) or proper arrays have a kind other than `object`.\n\nPlease see the table below for the full list of kinds.\n\n\nInstalling\n----------\n**Note**: Kindof.js follows [semantic versioning](http://semver.org/).\n\n### Installing for the browser\nTake the `kindof.js` file and source it at will.\n\n### Installing on Node\nInstall with `npm install kindof`.  \nAnd require with `var kindof = require(\"kindof\")`.\n\nUsing\n-----\nPass any object to `kindof` and compare its output to what you expect:\n```javascript\nkindof(\"Hello\") // => \"string\"\nkindof(new String(\"Hello\")) // => \"string\"\n```\n\nA switch statement might help:\n```javascript\nswitch (kindof(obj)) {\n  case \"null\":   this.name = \"Alfred\"; break\n  case \"string\": this.name = obj; break\n  case \"number\": this.age = obj; break\n  default: throw new TypeError(\"Pardon, sir, came upon an unexpected type.\")\n}\n```\n\n\nKinds\n-----\nThe pattern is simple — all built-in objects that behave like **value objects** (numbers, strings, dates etc.) or are **real arrays** are said to be of a kind other than `object`. The `arguments` object, however, is not a proper array, so it therefore is an `object`.\n\nValue                 | Kindof\n----------------------|----------\n`undefined           `| undefined\n`null                `| null\n`true                `| boolean\n`false               `| boolean\n`new Boolean(true)   `| boolean\n`42                  `| number\n`new Number(42)      `| number\n`NaN                 `| number\n`Infinity            `| number\n`\"Hello\"             `| string\n`new String(\"Hello\") `| string\n`/.*/                `| regexp\n`new RegExp(\".*\")    `| regexp\n`new Date            `| date\n`[42, 69]            `| array\n`function() {}       `| function\n`{}                  `| object\n`arguments           `| object\n`new MyClass         `| object\n`new Error           `| object\n`Math                `| object\n`JSON                `| object\n\n**Subclassed objects**, such as subclassed arrays, are considered to be `object` unless their internal `[[Class]]` property remains that of the original. For ways to subclass properly, please see further reading below.\n\n\nFurther Reading\n---------------\n- The [`typeof` operator in ECMAScript 5.1][1].\n- The [`typeof` operator as implemented by Firefox][2].\n- Article on [subclassing `Array`][3] by [Juriy Zaytsev][4].\n\n[1]: http://www.ecma-international.org/ecma-262/5.1/#sec-11.4.3\n[2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n[3]: http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/\n[4]: http://perfectionkills.com\n\n\nLicense\n-------\nKindof.js is released under a *Lesser GNU Affero General Public License*, which in summary means:\n\n- You **can** use this program for **no cost**.\n- You **can** use this program for **both personal and commercial reasons**.\n- You **do not have to share your own program's code** which uses this program.\n- You **have to share modifications** (e.g bug-fixes) you've made to this program.\n\nFor more convoluted language, see the `LICENSE` file.\n\n\nAbout\n-----\n**[Andri Möll](http://themoll.com)** typed this and the code.  \n[Monday Calendar](https://mondayapp.com) supported the engineering work.\n\nIf you find Kindof.js needs improving, please don't hesitate to type to me now at [andri@dot.ee](mailto:andri@dot.ee) or [create an issue online](https://github.com/moll/js-kindof/issues).\n",
  "readmeFilename": "README.md",
  "_id": "kindof@1.0.0",
  "dist": {
    "shasum": "131899a8527537a94da2edcd5cc49fc609606560",
    "tarball": "http://registry.npmjs.org/kindof/-/kindof-1.0.0.tgz"
  },
  "_from": "kindof@>= 1.0.0 < 2",
  "_npmVersion": "1.3.8",
  "_npmUser": {
    "name": "moll",
    "email": "andri@dot.ee"
  },
  "maintainers": [
    {
      "name": "moll",
      "email": "andri@dot.ee"
    }
  ],
  "directories": {},
  "_shasum": "131899a8527537a94da2edcd5cc49fc609606560",
  "_resolved": "https://registry.npmjs.org/kindof/-/kindof-1.0.0.tgz"
}
